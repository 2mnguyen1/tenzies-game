{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taubi\\\\Learn-Reacts\\\\tenzies_game\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Die from './components/Die';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setAllDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n\n  function checkCondition() {\n    let result = false;\n\n    for (let die of dice) {\n      if (die.isHeld) {\n        result = true;\n      } else {\n        return false;\n      }\n    } // for (let i = 0; i < dice.length - 1; i++) {\n    //     if (dice[i].value === dice[i + 1].value) {\n    //         result = true\n    //     } else {\n    //         return false\n    //     }\n    // }\n\n\n    return result;\n  }\n\n  React.useEffect(() => {\n    setTenzies(checkCondition());\n  }, [dice]);\n\n  if (tenzies) {\n    console.log(\"YOu WIN\");\n  }\n\n  function generateNewDie() {\n    return {\n      value: Math.floor(Math.random() * 6 + 1),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n\n  function allNewDice() {\n    let arr = [];\n\n    for (let i = 0; i < 10; ++i) {\n      arr.push(generateNewDie());\n    }\n\n    return arr;\n  }\n\n  function rollDice() {\n    setAllDice(prevDice => prevDice.map(die => die.isHeld ? die : generateNewDie()));\n  }\n\n  function holdDice(id) {\n    setAllDice(prevDice => prevDice.map(die => ({ ...die,\n      isHeld: die.id === id ? !die.isHeld : die.isHeld\n    })));\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    isHeld: die.isHeld,\n    value: die.value // id={die.id}\n    ,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 42\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roll-dice\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rollDice,\n        children: \"Roll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Y05Dg3ZeSw8aFhb72IA2/5Ejii0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/taubi/Learn-Reacts/tenzies_game/src/App.js"],"names":["React","Die","nanoid","App","dice","setAllDice","useState","allNewDice","tenzies","setTenzies","checkCondition","result","die","isHeld","useEffect","console","log","generateNewDie","value","Math","floor","random","id","arr","i","push","rollDice","prevDice","map","holdDice","diceElements"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Die from './components/Die'\r\nimport { nanoid } from 'nanoid'\r\n\r\n\r\nexport default function App() {\r\n    const [dice, setAllDice] = React.useState(allNewDice())\r\n    const [tenzies, setTenzies] = React.useState(false)\r\n\r\n    function checkCondition() {\r\n        let result = false\r\n        for (let die of dice) {\r\n            if (die.isHeld) {\r\n                result = true\r\n            } else {\r\n               return false\r\n            }\r\n        }\r\n        // for (let i = 0; i < dice.length - 1; i++) {\r\n        //     if (dice[i].value === dice[i + 1].value) {\r\n        //         result = true\r\n        //     } else {\r\n        //         return false\r\n        //     }\r\n        // }\r\n        return result\r\n    }\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        setTenzies(checkCondition())\r\n    }, [dice])\r\n\r\n    if (tenzies) {console.log(\"YOu WIN\")}\r\n\r\n\r\n    function generateNewDie() {\r\n        return {\r\n            value: Math.floor(Math.random() * 6 + 1),\r\n            isHeld: false,\r\n            id: nanoid()\r\n        }\r\n    }\r\n\r\n    function allNewDice() {\r\n        let arr = []\r\n        for (let i = 0; i < 10; ++i){\r\n            arr.push(generateNewDie())\r\n        }\r\n        return arr\r\n    }\r\n\r\n    function rollDice() {\r\n        setAllDice(prevDice => (\r\n            prevDice.map(die => (die.isHeld ? die : generateNewDie()))\r\n        ))\r\n    }\r\n\r\n    function holdDice(id) {\r\n        setAllDice(prevDice => (prevDice.map(die => ({\r\n            ...die,\r\n            isHeld: die.id === id ? !die.isHeld : die.isHeld\r\n        }))))\r\n    }\r\n\r\n    const diceElements = dice.map(die => <Die\r\n        isHeld={die.isHeld}\r\n        value={die.value}\r\n        // id={die.id}\r\n        key={die.id}\r\n        holdDice={() => holdDice(die.id)}\r\n        />)\r\n\r\n\r\n    return (\r\n        <main>\r\n            <h1 className=\"title\">Tenzies</h1>\r\n            <p className=\"instructions\">Roll until all dice are the same.\r\n                Click each die to freeze it at its current value between rolls.\r\n            </p>\r\n            <div className=\"container\">\r\n                {diceElements}\r\n            </div>\r\n            <div className='roll-dice'>\r\n                <button onClick={rollDice}>Roll</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}